/* eslint-disable */
/* prettier-ignore */

export type introspection_types = {
    'Boolean': unknown;
    'Float': unknown;
    'Int': unknown;
    'Int_comparison_exp': { kind: 'INPUT_OBJECT'; name: 'Int_comparison_exp'; isOneOf: false; inputFields: [{ name: '_eq'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: '_gt'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: '_gte'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: '_in'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; }; defaultValue: null }, { name: '_is_null'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: '_lt'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: '_lte'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: '_neq'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: '_nin'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; }; defaultValue: null }]; };
    'String': unknown;
    'String_comparison_exp': { kind: 'INPUT_OBJECT'; name: 'String_comparison_exp'; isOneOf: false; inputFields: [{ name: '_eq'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_gt'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_gte'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_ilike'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_in'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: '_iregex'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_is_null'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: '_like'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_lt'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_lte'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_neq'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_nilike'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_nin'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: '_niregex'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_nlike'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_nregex'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_nsimilar'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_regex'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_similar'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'cursor_ordering': { name: 'cursor_ordering'; enumValues: 'ASC' | 'DESC'; };
    'esp_data': { kind: 'OBJECT'; name: 'esp_data'; fields: { 'data': { name: 'data'; type: { kind: 'SCALAR'; name: 'jsonb'; ofType: null; } }; 'espmac': { name: 'espmac'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'espmac'; ofType: null; }; } }; 'id': { name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'mac_addr': { name: 'mac_addr'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'esp_data_aggregate': { kind: 'OBJECT'; name: 'esp_data_aggregate'; fields: { 'aggregate': { name: 'aggregate'; type: { kind: 'OBJECT'; name: 'esp_data_aggregate_fields'; ofType: null; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'esp_data'; ofType: null; }; }; }; } }; }; };
    'esp_data_aggregate_fields': { kind: 'OBJECT'; name: 'esp_data_aggregate_fields'; fields: { 'avg': { name: 'avg'; type: { kind: 'OBJECT'; name: 'esp_data_avg_fields'; ofType: null; } }; 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'max': { name: 'max'; type: { kind: 'OBJECT'; name: 'esp_data_max_fields'; ofType: null; } }; 'min': { name: 'min'; type: { kind: 'OBJECT'; name: 'esp_data_min_fields'; ofType: null; } }; 'stddev': { name: 'stddev'; type: { kind: 'OBJECT'; name: 'esp_data_stddev_fields'; ofType: null; } }; 'stddev_pop': { name: 'stddev_pop'; type: { kind: 'OBJECT'; name: 'esp_data_stddev_pop_fields'; ofType: null; } }; 'stddev_samp': { name: 'stddev_samp'; type: { kind: 'OBJECT'; name: 'esp_data_stddev_samp_fields'; ofType: null; } }; 'sum': { name: 'sum'; type: { kind: 'OBJECT'; name: 'esp_data_sum_fields'; ofType: null; } }; 'var_pop': { name: 'var_pop'; type: { kind: 'OBJECT'; name: 'esp_data_var_pop_fields'; ofType: null; } }; 'var_samp': { name: 'var_samp'; type: { kind: 'OBJECT'; name: 'esp_data_var_samp_fields'; ofType: null; } }; 'variance': { name: 'variance'; type: { kind: 'OBJECT'; name: 'esp_data_variance_fields'; ofType: null; } }; }; };
    'esp_data_append_input': { kind: 'INPUT_OBJECT'; name: 'esp_data_append_input'; isOneOf: false; inputFields: [{ name: 'data'; type: { kind: 'SCALAR'; name: 'jsonb'; ofType: null; }; defaultValue: null }]; };
    'esp_data_avg_fields': { kind: 'OBJECT'; name: 'esp_data_avg_fields'; fields: { 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'esp_data_bool_exp': { kind: 'INPUT_OBJECT'; name: 'esp_data_bool_exp'; isOneOf: false; inputFields: [{ name: '_and'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'esp_data_bool_exp'; ofType: null; }; }; }; defaultValue: null }, { name: '_not'; type: { kind: 'INPUT_OBJECT'; name: 'esp_data_bool_exp'; ofType: null; }; defaultValue: null }, { name: '_or'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'esp_data_bool_exp'; ofType: null; }; }; }; defaultValue: null }, { name: 'data'; type: { kind: 'INPUT_OBJECT'; name: 'jsonb_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'espmac'; type: { kind: 'INPUT_OBJECT'; name: 'espmac_bool_exp'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'INPUT_OBJECT'; name: 'Int_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'mac_addr'; type: { kind: 'INPUT_OBJECT'; name: 'String_comparison_exp'; ofType: null; }; defaultValue: null }]; };
    'esp_data_constraint': { name: 'esp_data_constraint'; enumValues: 'esp_data_mac_addr_key' | 'esp_data_pkey'; };
    'esp_data_delete_at_path_input': { kind: 'INPUT_OBJECT'; name: 'esp_data_delete_at_path_input'; isOneOf: false; inputFields: [{ name: 'data'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }]; };
    'esp_data_delete_elem_input': { kind: 'INPUT_OBJECT'; name: 'esp_data_delete_elem_input'; isOneOf: false; inputFields: [{ name: 'data'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }]; };
    'esp_data_delete_key_input': { kind: 'INPUT_OBJECT'; name: 'esp_data_delete_key_input'; isOneOf: false; inputFields: [{ name: 'data'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'esp_data_inc_input': { kind: 'INPUT_OBJECT'; name: 'esp_data_inc_input'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }]; };
    'esp_data_insert_input': { kind: 'INPUT_OBJECT'; name: 'esp_data_insert_input'; isOneOf: false; inputFields: [{ name: 'data'; type: { kind: 'SCALAR'; name: 'jsonb'; ofType: null; }; defaultValue: null }, { name: 'espmac'; type: { kind: 'INPUT_OBJECT'; name: 'espmac_obj_rel_insert_input'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'mac_addr'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'esp_data_max_fields': { kind: 'OBJECT'; name: 'esp_data_max_fields'; fields: { 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'mac_addr': { name: 'mac_addr'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'esp_data_min_fields': { kind: 'OBJECT'; name: 'esp_data_min_fields'; fields: { 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; 'mac_addr': { name: 'mac_addr'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'esp_data_mutation_response': { kind: 'OBJECT'; name: 'esp_data_mutation_response'; fields: { 'affected_rows': { name: 'affected_rows'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'returning': { name: 'returning'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'esp_data'; ofType: null; }; }; }; } }; }; };
    'esp_data_obj_rel_insert_input': { kind: 'INPUT_OBJECT'; name: 'esp_data_obj_rel_insert_input'; isOneOf: false; inputFields: [{ name: 'data'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'esp_data_insert_input'; ofType: null; }; }; defaultValue: null }, { name: 'on_conflict'; type: { kind: 'INPUT_OBJECT'; name: 'esp_data_on_conflict'; ofType: null; }; defaultValue: null }]; };
    'esp_data_on_conflict': { kind: 'INPUT_OBJECT'; name: 'esp_data_on_conflict'; isOneOf: false; inputFields: [{ name: 'constraint'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'esp_data_constraint'; ofType: null; }; }; defaultValue: null }, { name: 'update_columns'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'esp_data_update_column'; ofType: null; }; }; }; }; defaultValue: "[]" }, { name: 'where'; type: { kind: 'INPUT_OBJECT'; name: 'esp_data_bool_exp'; ofType: null; }; defaultValue: null }]; };
    'esp_data_order_by': { kind: 'INPUT_OBJECT'; name: 'esp_data_order_by'; isOneOf: false; inputFields: [{ name: 'data'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'espmac'; type: { kind: 'INPUT_OBJECT'; name: 'espmac_order_by'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'mac_addr'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }]; };
    'esp_data_pk_columns_input': { kind: 'INPUT_OBJECT'; name: 'esp_data_pk_columns_input'; isOneOf: false; inputFields: [{ name: 'id'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; }; defaultValue: null }]; };
    'esp_data_prepend_input': { kind: 'INPUT_OBJECT'; name: 'esp_data_prepend_input'; isOneOf: false; inputFields: [{ name: 'data'; type: { kind: 'SCALAR'; name: 'jsonb'; ofType: null; }; defaultValue: null }]; };
    'esp_data_select_column': { name: 'esp_data_select_column'; enumValues: 'data' | 'id' | 'mac_addr'; };
    'esp_data_set_input': { kind: 'INPUT_OBJECT'; name: 'esp_data_set_input'; isOneOf: false; inputFields: [{ name: 'data'; type: { kind: 'SCALAR'; name: 'jsonb'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'mac_addr'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'esp_data_stddev_fields': { kind: 'OBJECT'; name: 'esp_data_stddev_fields'; fields: { 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'esp_data_stddev_pop_fields': { kind: 'OBJECT'; name: 'esp_data_stddev_pop_fields'; fields: { 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'esp_data_stddev_samp_fields': { kind: 'OBJECT'; name: 'esp_data_stddev_samp_fields'; fields: { 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'esp_data_stream_cursor_input': { kind: 'INPUT_OBJECT'; name: 'esp_data_stream_cursor_input'; isOneOf: false; inputFields: [{ name: 'initial_value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'esp_data_stream_cursor_value_input'; ofType: null; }; }; defaultValue: null }, { name: 'ordering'; type: { kind: 'ENUM'; name: 'cursor_ordering'; ofType: null; }; defaultValue: null }]; };
    'esp_data_stream_cursor_value_input': { kind: 'INPUT_OBJECT'; name: 'esp_data_stream_cursor_value_input'; isOneOf: false; inputFields: [{ name: 'data'; type: { kind: 'SCALAR'; name: 'jsonb'; ofType: null; }; defaultValue: null }, { name: 'id'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; defaultValue: null }, { name: 'mac_addr'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'esp_data_sum_fields': { kind: 'OBJECT'; name: 'esp_data_sum_fields'; fields: { 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'Int'; ofType: null; } }; }; };
    'esp_data_update_column': { name: 'esp_data_update_column'; enumValues: 'data' | 'id' | 'mac_addr'; };
    'esp_data_updates': { kind: 'INPUT_OBJECT'; name: 'esp_data_updates'; isOneOf: false; inputFields: [{ name: '_append'; type: { kind: 'INPUT_OBJECT'; name: 'esp_data_append_input'; ofType: null; }; defaultValue: null }, { name: '_delete_at_path'; type: { kind: 'INPUT_OBJECT'; name: 'esp_data_delete_at_path_input'; ofType: null; }; defaultValue: null }, { name: '_delete_elem'; type: { kind: 'INPUT_OBJECT'; name: 'esp_data_delete_elem_input'; ofType: null; }; defaultValue: null }, { name: '_delete_key'; type: { kind: 'INPUT_OBJECT'; name: 'esp_data_delete_key_input'; ofType: null; }; defaultValue: null }, { name: '_inc'; type: { kind: 'INPUT_OBJECT'; name: 'esp_data_inc_input'; ofType: null; }; defaultValue: null }, { name: '_prepend'; type: { kind: 'INPUT_OBJECT'; name: 'esp_data_prepend_input'; ofType: null; }; defaultValue: null }, { name: '_set'; type: { kind: 'INPUT_OBJECT'; name: 'esp_data_set_input'; ofType: null; }; defaultValue: null }, { name: 'where'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'esp_data_bool_exp'; ofType: null; }; }; defaultValue: null }]; };
    'esp_data_var_pop_fields': { kind: 'OBJECT'; name: 'esp_data_var_pop_fields'; fields: { 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'esp_data_var_samp_fields': { kind: 'OBJECT'; name: 'esp_data_var_samp_fields'; fields: { 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'esp_data_variance_fields': { kind: 'OBJECT'; name: 'esp_data_variance_fields'; fields: { 'id': { name: 'id'; type: { kind: 'SCALAR'; name: 'Float'; ofType: null; } }; }; };
    'espmac': { kind: 'OBJECT'; name: 'espmac'; fields: { 'esp_datum': { name: 'esp_datum'; type: { kind: 'OBJECT'; name: 'esp_data'; ofType: null; } }; 'espusermacs': { name: 'espusermacs'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'espusermac'; ofType: null; }; }; }; } }; 'espusermacs_aggregate': { name: 'espusermacs_aggregate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'espusermac_aggregate'; ofType: null; }; } }; 'mac_addr': { name: 'mac_addr'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'password': { name: 'password'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'espmac_aggregate': { kind: 'OBJECT'; name: 'espmac_aggregate'; fields: { 'aggregate': { name: 'aggregate'; type: { kind: 'OBJECT'; name: 'espmac_aggregate_fields'; ofType: null; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'espmac'; ofType: null; }; }; }; } }; }; };
    'espmac_aggregate_fields': { kind: 'OBJECT'; name: 'espmac_aggregate_fields'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'max': { name: 'max'; type: { kind: 'OBJECT'; name: 'espmac_max_fields'; ofType: null; } }; 'min': { name: 'min'; type: { kind: 'OBJECT'; name: 'espmac_min_fields'; ofType: null; } }; }; };
    'espmac_bool_exp': { kind: 'INPUT_OBJECT'; name: 'espmac_bool_exp'; isOneOf: false; inputFields: [{ name: '_and'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'espmac_bool_exp'; ofType: null; }; }; }; defaultValue: null }, { name: '_not'; type: { kind: 'INPUT_OBJECT'; name: 'espmac_bool_exp'; ofType: null; }; defaultValue: null }, { name: '_or'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'espmac_bool_exp'; ofType: null; }; }; }; defaultValue: null }, { name: 'esp_datum'; type: { kind: 'INPUT_OBJECT'; name: 'esp_data_bool_exp'; ofType: null; }; defaultValue: null }, { name: 'espusermacs'; type: { kind: 'INPUT_OBJECT'; name: 'espusermac_bool_exp'; ofType: null; }; defaultValue: null }, { name: 'espusermacs_aggregate'; type: { kind: 'INPUT_OBJECT'; name: 'espusermac_aggregate_bool_exp'; ofType: null; }; defaultValue: null }, { name: 'mac_addr'; type: { kind: 'INPUT_OBJECT'; name: 'String_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'password'; type: { kind: 'INPUT_OBJECT'; name: 'String_comparison_exp'; ofType: null; }; defaultValue: null }]; };
    'espmac_constraint': { name: 'espmac_constraint'; enumValues: 'espmac_pkey'; };
    'espmac_insert_input': { kind: 'INPUT_OBJECT'; name: 'espmac_insert_input'; isOneOf: false; inputFields: [{ name: 'esp_datum'; type: { kind: 'INPUT_OBJECT'; name: 'esp_data_obj_rel_insert_input'; ofType: null; }; defaultValue: null }, { name: 'espusermacs'; type: { kind: 'INPUT_OBJECT'; name: 'espusermac_arr_rel_insert_input'; ofType: null; }; defaultValue: null }, { name: 'mac_addr'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'password'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'espmac_max_fields': { kind: 'OBJECT'; name: 'espmac_max_fields'; fields: { 'mac_addr': { name: 'mac_addr'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'password': { name: 'password'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'espmac_min_fields': { kind: 'OBJECT'; name: 'espmac_min_fields'; fields: { 'mac_addr': { name: 'mac_addr'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'password': { name: 'password'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'espmac_mutation_response': { kind: 'OBJECT'; name: 'espmac_mutation_response'; fields: { 'affected_rows': { name: 'affected_rows'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'returning': { name: 'returning'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'espmac'; ofType: null; }; }; }; } }; }; };
    'espmac_obj_rel_insert_input': { kind: 'INPUT_OBJECT'; name: 'espmac_obj_rel_insert_input'; isOneOf: false; inputFields: [{ name: 'data'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'espmac_insert_input'; ofType: null; }; }; defaultValue: null }, { name: 'on_conflict'; type: { kind: 'INPUT_OBJECT'; name: 'espmac_on_conflict'; ofType: null; }; defaultValue: null }]; };
    'espmac_on_conflict': { kind: 'INPUT_OBJECT'; name: 'espmac_on_conflict'; isOneOf: false; inputFields: [{ name: 'constraint'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'espmac_constraint'; ofType: null; }; }; defaultValue: null }, { name: 'update_columns'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'espmac_update_column'; ofType: null; }; }; }; }; defaultValue: "[]" }, { name: 'where'; type: { kind: 'INPUT_OBJECT'; name: 'espmac_bool_exp'; ofType: null; }; defaultValue: null }]; };
    'espmac_order_by': { kind: 'INPUT_OBJECT'; name: 'espmac_order_by'; isOneOf: false; inputFields: [{ name: 'esp_datum'; type: { kind: 'INPUT_OBJECT'; name: 'esp_data_order_by'; ofType: null; }; defaultValue: null }, { name: 'espusermacs_aggregate'; type: { kind: 'INPUT_OBJECT'; name: 'espusermac_aggregate_order_by'; ofType: null; }; defaultValue: null }, { name: 'mac_addr'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'password'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }]; };
    'espmac_pk_columns_input': { kind: 'INPUT_OBJECT'; name: 'espmac_pk_columns_input'; isOneOf: false; inputFields: [{ name: 'mac_addr'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'espmac_select_column': { name: 'espmac_select_column'; enumValues: 'mac_addr' | 'password'; };
    'espmac_set_input': { kind: 'INPUT_OBJECT'; name: 'espmac_set_input'; isOneOf: false; inputFields: [{ name: 'mac_addr'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'password'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'espmac_stream_cursor_input': { kind: 'INPUT_OBJECT'; name: 'espmac_stream_cursor_input'; isOneOf: false; inputFields: [{ name: 'initial_value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'espmac_stream_cursor_value_input'; ofType: null; }; }; defaultValue: null }, { name: 'ordering'; type: { kind: 'ENUM'; name: 'cursor_ordering'; ofType: null; }; defaultValue: null }]; };
    'espmac_stream_cursor_value_input': { kind: 'INPUT_OBJECT'; name: 'espmac_stream_cursor_value_input'; isOneOf: false; inputFields: [{ name: 'mac_addr'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'password'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'espmac_update_column': { name: 'espmac_update_column'; enumValues: 'mac_addr' | 'password'; };
    'espmac_updates': { kind: 'INPUT_OBJECT'; name: 'espmac_updates'; isOneOf: false; inputFields: [{ name: '_set'; type: { kind: 'INPUT_OBJECT'; name: 'espmac_set_input'; ofType: null; }; defaultValue: null }, { name: 'where'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'espmac_bool_exp'; ofType: null; }; }; defaultValue: null }]; };
    'espusermac': { kind: 'OBJECT'; name: 'espusermac'; fields: { 'espmac': { name: 'espmac'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'espmac'; ofType: null; }; } }; 'mac_addr': { name: 'mac_addr'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'user': { name: 'user'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'users'; ofType: null; }; } }; 'username': { name: 'username'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'espusermac_aggregate': { kind: 'OBJECT'; name: 'espusermac_aggregate'; fields: { 'aggregate': { name: 'aggregate'; type: { kind: 'OBJECT'; name: 'espusermac_aggregate_fields'; ofType: null; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'espusermac'; ofType: null; }; }; }; } }; }; };
    'espusermac_aggregate_bool_exp': { kind: 'INPUT_OBJECT'; name: 'espusermac_aggregate_bool_exp'; isOneOf: false; inputFields: [{ name: 'count'; type: { kind: 'INPUT_OBJECT'; name: 'espusermac_aggregate_bool_exp_count'; ofType: null; }; defaultValue: null }]; };
    'espusermac_aggregate_bool_exp_count': { kind: 'INPUT_OBJECT'; name: 'espusermac_aggregate_bool_exp_count'; isOneOf: false; inputFields: [{ name: 'arguments'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'espusermac_select_column'; ofType: null; }; }; }; defaultValue: null }, { name: 'distinct'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: 'filter'; type: { kind: 'INPUT_OBJECT'; name: 'espusermac_bool_exp'; ofType: null; }; defaultValue: null }, { name: 'predicate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'Int_comparison_exp'; ofType: null; }; }; defaultValue: null }]; };
    'espusermac_aggregate_fields': { kind: 'OBJECT'; name: 'espusermac_aggregate_fields'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'max': { name: 'max'; type: { kind: 'OBJECT'; name: 'espusermac_max_fields'; ofType: null; } }; 'min': { name: 'min'; type: { kind: 'OBJECT'; name: 'espusermac_min_fields'; ofType: null; } }; }; };
    'espusermac_aggregate_order_by': { kind: 'INPUT_OBJECT'; name: 'espusermac_aggregate_order_by'; isOneOf: false; inputFields: [{ name: 'count'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'max'; type: { kind: 'INPUT_OBJECT'; name: 'espusermac_max_order_by'; ofType: null; }; defaultValue: null }, { name: 'min'; type: { kind: 'INPUT_OBJECT'; name: 'espusermac_min_order_by'; ofType: null; }; defaultValue: null }]; };
    'espusermac_arr_rel_insert_input': { kind: 'INPUT_OBJECT'; name: 'espusermac_arr_rel_insert_input'; isOneOf: false; inputFields: [{ name: 'data'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'espusermac_insert_input'; ofType: null; }; }; }; }; defaultValue: null }, { name: 'on_conflict'; type: { kind: 'INPUT_OBJECT'; name: 'espusermac_on_conflict'; ofType: null; }; defaultValue: null }]; };
    'espusermac_bool_exp': { kind: 'INPUT_OBJECT'; name: 'espusermac_bool_exp'; isOneOf: false; inputFields: [{ name: '_and'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'espusermac_bool_exp'; ofType: null; }; }; }; defaultValue: null }, { name: '_not'; type: { kind: 'INPUT_OBJECT'; name: 'espusermac_bool_exp'; ofType: null; }; defaultValue: null }, { name: '_or'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'espusermac_bool_exp'; ofType: null; }; }; }; defaultValue: null }, { name: 'espmac'; type: { kind: 'INPUT_OBJECT'; name: 'espmac_bool_exp'; ofType: null; }; defaultValue: null }, { name: 'mac_addr'; type: { kind: 'INPUT_OBJECT'; name: 'String_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'user'; type: { kind: 'INPUT_OBJECT'; name: 'users_bool_exp'; ofType: null; }; defaultValue: null }, { name: 'username'; type: { kind: 'INPUT_OBJECT'; name: 'String_comparison_exp'; ofType: null; }; defaultValue: null }]; };
    'espusermac_constraint': { name: 'espusermac_constraint'; enumValues: 'espusermac_pkey'; };
    'espusermac_insert_input': { kind: 'INPUT_OBJECT'; name: 'espusermac_insert_input'; isOneOf: false; inputFields: [{ name: 'espmac'; type: { kind: 'INPUT_OBJECT'; name: 'espmac_obj_rel_insert_input'; ofType: null; }; defaultValue: null }, { name: 'mac_addr'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'user'; type: { kind: 'INPUT_OBJECT'; name: 'users_obj_rel_insert_input'; ofType: null; }; defaultValue: null }, { name: 'username'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'espusermac_max_fields': { kind: 'OBJECT'; name: 'espusermac_max_fields'; fields: { 'mac_addr': { name: 'mac_addr'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'username': { name: 'username'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'espusermac_max_order_by': { kind: 'INPUT_OBJECT'; name: 'espusermac_max_order_by'; isOneOf: false; inputFields: [{ name: 'mac_addr'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'username'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }]; };
    'espusermac_min_fields': { kind: 'OBJECT'; name: 'espusermac_min_fields'; fields: { 'mac_addr': { name: 'mac_addr'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'username': { name: 'username'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'espusermac_min_order_by': { kind: 'INPUT_OBJECT'; name: 'espusermac_min_order_by'; isOneOf: false; inputFields: [{ name: 'mac_addr'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'username'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }]; };
    'espusermac_mutation_response': { kind: 'OBJECT'; name: 'espusermac_mutation_response'; fields: { 'affected_rows': { name: 'affected_rows'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'returning': { name: 'returning'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'espusermac'; ofType: null; }; }; }; } }; }; };
    'espusermac_on_conflict': { kind: 'INPUT_OBJECT'; name: 'espusermac_on_conflict'; isOneOf: false; inputFields: [{ name: 'constraint'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'espusermac_constraint'; ofType: null; }; }; defaultValue: null }, { name: 'update_columns'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'espusermac_update_column'; ofType: null; }; }; }; }; defaultValue: "[]" }, { name: 'where'; type: { kind: 'INPUT_OBJECT'; name: 'espusermac_bool_exp'; ofType: null; }; defaultValue: null }]; };
    'espusermac_order_by': { kind: 'INPUT_OBJECT'; name: 'espusermac_order_by'; isOneOf: false; inputFields: [{ name: 'espmac'; type: { kind: 'INPUT_OBJECT'; name: 'espmac_order_by'; ofType: null; }; defaultValue: null }, { name: 'mac_addr'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'user'; type: { kind: 'INPUT_OBJECT'; name: 'users_order_by'; ofType: null; }; defaultValue: null }, { name: 'username'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }]; };
    'espusermac_pk_columns_input': { kind: 'INPUT_OBJECT'; name: 'espusermac_pk_columns_input'; isOneOf: false; inputFields: [{ name: 'mac_addr'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }, { name: 'username'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'espusermac_select_column': { name: 'espusermac_select_column'; enumValues: 'mac_addr' | 'username'; };
    'espusermac_set_input': { kind: 'INPUT_OBJECT'; name: 'espusermac_set_input'; isOneOf: false; inputFields: [{ name: 'mac_addr'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'username'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'espusermac_stream_cursor_input': { kind: 'INPUT_OBJECT'; name: 'espusermac_stream_cursor_input'; isOneOf: false; inputFields: [{ name: 'initial_value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'espusermac_stream_cursor_value_input'; ofType: null; }; }; defaultValue: null }, { name: 'ordering'; type: { kind: 'ENUM'; name: 'cursor_ordering'; ofType: null; }; defaultValue: null }]; };
    'espusermac_stream_cursor_value_input': { kind: 'INPUT_OBJECT'; name: 'espusermac_stream_cursor_value_input'; isOneOf: false; inputFields: [{ name: 'mac_addr'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'username'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'espusermac_update_column': { name: 'espusermac_update_column'; enumValues: 'mac_addr' | 'username'; };
    'espusermac_updates': { kind: 'INPUT_OBJECT'; name: 'espusermac_updates'; isOneOf: false; inputFields: [{ name: '_set'; type: { kind: 'INPUT_OBJECT'; name: 'espusermac_set_input'; ofType: null; }; defaultValue: null }, { name: 'where'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'espusermac_bool_exp'; ofType: null; }; }; defaultValue: null }]; };
    'jsonb': unknown;
    'jsonb_cast_exp': { kind: 'INPUT_OBJECT'; name: 'jsonb_cast_exp'; isOneOf: false; inputFields: [{ name: 'String'; type: { kind: 'INPUT_OBJECT'; name: 'String_comparison_exp'; ofType: null; }; defaultValue: null }]; };
    'jsonb_comparison_exp': { kind: 'INPUT_OBJECT'; name: 'jsonb_comparison_exp'; isOneOf: false; inputFields: [{ name: '_cast'; type: { kind: 'INPUT_OBJECT'; name: 'jsonb_cast_exp'; ofType: null; }; defaultValue: null }, { name: '_contained_in'; type: { kind: 'SCALAR'; name: 'jsonb'; ofType: null; }; defaultValue: null }, { name: '_contains'; type: { kind: 'SCALAR'; name: 'jsonb'; ofType: null; }; defaultValue: null }, { name: '_eq'; type: { kind: 'SCALAR'; name: 'jsonb'; ofType: null; }; defaultValue: null }, { name: '_gt'; type: { kind: 'SCALAR'; name: 'jsonb'; ofType: null; }; defaultValue: null }, { name: '_gte'; type: { kind: 'SCALAR'; name: 'jsonb'; ofType: null; }; defaultValue: null }, { name: '_has_key'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: '_has_keys_all'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: '_has_keys_any'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; }; defaultValue: null }, { name: '_in'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'jsonb'; ofType: null; }; }; }; defaultValue: null }, { name: '_is_null'; type: { kind: 'SCALAR'; name: 'Boolean'; ofType: null; }; defaultValue: null }, { name: '_lt'; type: { kind: 'SCALAR'; name: 'jsonb'; ofType: null; }; defaultValue: null }, { name: '_lte'; type: { kind: 'SCALAR'; name: 'jsonb'; ofType: null; }; defaultValue: null }, { name: '_neq'; type: { kind: 'SCALAR'; name: 'jsonb'; ofType: null; }; defaultValue: null }, { name: '_nin'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'jsonb'; ofType: null; }; }; }; defaultValue: null }]; };
    'mutation_root': { kind: 'OBJECT'; name: 'mutation_root'; fields: { 'delete_esp_data': { name: 'delete_esp_data'; type: { kind: 'OBJECT'; name: 'esp_data_mutation_response'; ofType: null; } }; 'delete_esp_data_by_pk': { name: 'delete_esp_data_by_pk'; type: { kind: 'OBJECT'; name: 'esp_data'; ofType: null; } }; 'delete_espmac': { name: 'delete_espmac'; type: { kind: 'OBJECT'; name: 'espmac_mutation_response'; ofType: null; } }; 'delete_espmac_by_pk': { name: 'delete_espmac_by_pk'; type: { kind: 'OBJECT'; name: 'espmac'; ofType: null; } }; 'delete_espusermac': { name: 'delete_espusermac'; type: { kind: 'OBJECT'; name: 'espusermac_mutation_response'; ofType: null; } }; 'delete_espusermac_by_pk': { name: 'delete_espusermac_by_pk'; type: { kind: 'OBJECT'; name: 'espusermac'; ofType: null; } }; 'delete_users': { name: 'delete_users'; type: { kind: 'OBJECT'; name: 'users_mutation_response'; ofType: null; } }; 'delete_users_by_pk': { name: 'delete_users_by_pk'; type: { kind: 'OBJECT'; name: 'users'; ofType: null; } }; 'insert_esp_data': { name: 'insert_esp_data'; type: { kind: 'OBJECT'; name: 'esp_data_mutation_response'; ofType: null; } }; 'insert_esp_data_one': { name: 'insert_esp_data_one'; type: { kind: 'OBJECT'; name: 'esp_data'; ofType: null; } }; 'insert_espmac': { name: 'insert_espmac'; type: { kind: 'OBJECT'; name: 'espmac_mutation_response'; ofType: null; } }; 'insert_espmac_one': { name: 'insert_espmac_one'; type: { kind: 'OBJECT'; name: 'espmac'; ofType: null; } }; 'insert_espusermac': { name: 'insert_espusermac'; type: { kind: 'OBJECT'; name: 'espusermac_mutation_response'; ofType: null; } }; 'insert_espusermac_one': { name: 'insert_espusermac_one'; type: { kind: 'OBJECT'; name: 'espusermac'; ofType: null; } }; 'insert_users': { name: 'insert_users'; type: { kind: 'OBJECT'; name: 'users_mutation_response'; ofType: null; } }; 'insert_users_one': { name: 'insert_users_one'; type: { kind: 'OBJECT'; name: 'users'; ofType: null; } }; 'update_esp_data': { name: 'update_esp_data'; type: { kind: 'OBJECT'; name: 'esp_data_mutation_response'; ofType: null; } }; 'update_esp_data_by_pk': { name: 'update_esp_data_by_pk'; type: { kind: 'OBJECT'; name: 'esp_data'; ofType: null; } }; 'update_esp_data_many': { name: 'update_esp_data_many'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'esp_data_mutation_response'; ofType: null; }; } }; 'update_espmac': { name: 'update_espmac'; type: { kind: 'OBJECT'; name: 'espmac_mutation_response'; ofType: null; } }; 'update_espmac_by_pk': { name: 'update_espmac_by_pk'; type: { kind: 'OBJECT'; name: 'espmac'; ofType: null; } }; 'update_espmac_many': { name: 'update_espmac_many'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'espmac_mutation_response'; ofType: null; }; } }; 'update_espusermac': { name: 'update_espusermac'; type: { kind: 'OBJECT'; name: 'espusermac_mutation_response'; ofType: null; } }; 'update_espusermac_by_pk': { name: 'update_espusermac_by_pk'; type: { kind: 'OBJECT'; name: 'espusermac'; ofType: null; } }; 'update_espusermac_many': { name: 'update_espusermac_many'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'espusermac_mutation_response'; ofType: null; }; } }; 'update_users': { name: 'update_users'; type: { kind: 'OBJECT'; name: 'users_mutation_response'; ofType: null; } }; 'update_users_by_pk': { name: 'update_users_by_pk'; type: { kind: 'OBJECT'; name: 'users'; ofType: null; } }; 'update_users_many': { name: 'update_users_many'; type: { kind: 'LIST'; name: never; ofType: { kind: 'OBJECT'; name: 'users_mutation_response'; ofType: null; }; } }; }; };
    'order_by': { name: 'order_by'; enumValues: 'asc' | 'asc_nulls_first' | 'asc_nulls_last' | 'desc' | 'desc_nulls_first' | 'desc_nulls_last'; };
    'query_root': { kind: 'OBJECT'; name: 'query_root'; fields: { 'esp_data': { name: 'esp_data'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'esp_data'; ofType: null; }; }; }; } }; 'esp_data_aggregate': { name: 'esp_data_aggregate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'esp_data_aggregate'; ofType: null; }; } }; 'esp_data_by_pk': { name: 'esp_data_by_pk'; type: { kind: 'OBJECT'; name: 'esp_data'; ofType: null; } }; 'espmac': { name: 'espmac'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'espmac'; ofType: null; }; }; }; } }; 'espmac_aggregate': { name: 'espmac_aggregate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'espmac_aggregate'; ofType: null; }; } }; 'espmac_by_pk': { name: 'espmac_by_pk'; type: { kind: 'OBJECT'; name: 'espmac'; ofType: null; } }; 'espusermac': { name: 'espusermac'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'espusermac'; ofType: null; }; }; }; } }; 'espusermac_aggregate': { name: 'espusermac_aggregate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'espusermac_aggregate'; ofType: null; }; } }; 'espusermac_by_pk': { name: 'espusermac_by_pk'; type: { kind: 'OBJECT'; name: 'espusermac'; ofType: null; } }; 'users': { name: 'users'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'users'; ofType: null; }; }; }; } }; 'users_aggregate': { name: 'users_aggregate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'users_aggregate'; ofType: null; }; } }; 'users_by_pk': { name: 'users_by_pk'; type: { kind: 'OBJECT'; name: 'users'; ofType: null; } }; }; };
    'subscription_root': { kind: 'OBJECT'; name: 'subscription_root'; fields: { 'esp_data': { name: 'esp_data'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'esp_data'; ofType: null; }; }; }; } }; 'esp_data_aggregate': { name: 'esp_data_aggregate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'esp_data_aggregate'; ofType: null; }; } }; 'esp_data_by_pk': { name: 'esp_data_by_pk'; type: { kind: 'OBJECT'; name: 'esp_data'; ofType: null; } }; 'esp_data_stream': { name: 'esp_data_stream'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'esp_data'; ofType: null; }; }; }; } }; 'espmac': { name: 'espmac'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'espmac'; ofType: null; }; }; }; } }; 'espmac_aggregate': { name: 'espmac_aggregate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'espmac_aggregate'; ofType: null; }; } }; 'espmac_by_pk': { name: 'espmac_by_pk'; type: { kind: 'OBJECT'; name: 'espmac'; ofType: null; } }; 'espmac_stream': { name: 'espmac_stream'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'espmac'; ofType: null; }; }; }; } }; 'espusermac': { name: 'espusermac'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'espusermac'; ofType: null; }; }; }; } }; 'espusermac_aggregate': { name: 'espusermac_aggregate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'espusermac_aggregate'; ofType: null; }; } }; 'espusermac_by_pk': { name: 'espusermac_by_pk'; type: { kind: 'OBJECT'; name: 'espusermac'; ofType: null; } }; 'espusermac_stream': { name: 'espusermac_stream'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'espusermac'; ofType: null; }; }; }; } }; 'users': { name: 'users'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'users'; ofType: null; }; }; }; } }; 'users_aggregate': { name: 'users_aggregate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'users_aggregate'; ofType: null; }; } }; 'users_by_pk': { name: 'users_by_pk'; type: { kind: 'OBJECT'; name: 'users'; ofType: null; } }; 'users_stream': { name: 'users_stream'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'users'; ofType: null; }; }; }; } }; }; };
    'users': { kind: 'OBJECT'; name: 'users'; fields: { 'espusermacs': { name: 'espusermacs'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'espusermac'; ofType: null; }; }; }; } }; 'espusermacs_aggregate': { name: 'espusermacs_aggregate'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'espusermac_aggregate'; ofType: null; }; } }; 'password': { name: 'password'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; 'username': { name: 'username'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; } }; }; };
    'users_aggregate': { kind: 'OBJECT'; name: 'users_aggregate'; fields: { 'aggregate': { name: 'aggregate'; type: { kind: 'OBJECT'; name: 'users_aggregate_fields'; ofType: null; } }; 'nodes': { name: 'nodes'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'users'; ofType: null; }; }; }; } }; }; };
    'users_aggregate_fields': { kind: 'OBJECT'; name: 'users_aggregate_fields'; fields: { 'count': { name: 'count'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'max': { name: 'max'; type: { kind: 'OBJECT'; name: 'users_max_fields'; ofType: null; } }; 'min': { name: 'min'; type: { kind: 'OBJECT'; name: 'users_min_fields'; ofType: null; } }; }; };
    'users_bool_exp': { kind: 'INPUT_OBJECT'; name: 'users_bool_exp'; isOneOf: false; inputFields: [{ name: '_and'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'users_bool_exp'; ofType: null; }; }; }; defaultValue: null }, { name: '_not'; type: { kind: 'INPUT_OBJECT'; name: 'users_bool_exp'; ofType: null; }; defaultValue: null }, { name: '_or'; type: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'users_bool_exp'; ofType: null; }; }; }; defaultValue: null }, { name: 'espusermacs'; type: { kind: 'INPUT_OBJECT'; name: 'espusermac_bool_exp'; ofType: null; }; defaultValue: null }, { name: 'espusermacs_aggregate'; type: { kind: 'INPUT_OBJECT'; name: 'espusermac_aggregate_bool_exp'; ofType: null; }; defaultValue: null }, { name: 'password'; type: { kind: 'INPUT_OBJECT'; name: 'String_comparison_exp'; ofType: null; }; defaultValue: null }, { name: 'username'; type: { kind: 'INPUT_OBJECT'; name: 'String_comparison_exp'; ofType: null; }; defaultValue: null }]; };
    'users_constraint': { name: 'users_constraint'; enumValues: 'users_pkey'; };
    'users_insert_input': { kind: 'INPUT_OBJECT'; name: 'users_insert_input'; isOneOf: false; inputFields: [{ name: 'espusermacs'; type: { kind: 'INPUT_OBJECT'; name: 'espusermac_arr_rel_insert_input'; ofType: null; }; defaultValue: null }, { name: 'password'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'username'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'users_max_fields': { kind: 'OBJECT'; name: 'users_max_fields'; fields: { 'password': { name: 'password'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'username': { name: 'username'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'users_min_fields': { kind: 'OBJECT'; name: 'users_min_fields'; fields: { 'password': { name: 'password'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; 'username': { name: 'username'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; } }; }; };
    'users_mutation_response': { kind: 'OBJECT'; name: 'users_mutation_response'; fields: { 'affected_rows': { name: 'affected_rows'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'Int'; ofType: null; }; } }; 'returning': { name: 'returning'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'OBJECT'; name: 'users'; ofType: null; }; }; }; } }; }; };
    'users_obj_rel_insert_input': { kind: 'INPUT_OBJECT'; name: 'users_obj_rel_insert_input'; isOneOf: false; inputFields: [{ name: 'data'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'users_insert_input'; ofType: null; }; }; defaultValue: null }, { name: 'on_conflict'; type: { kind: 'INPUT_OBJECT'; name: 'users_on_conflict'; ofType: null; }; defaultValue: null }]; };
    'users_on_conflict': { kind: 'INPUT_OBJECT'; name: 'users_on_conflict'; isOneOf: false; inputFields: [{ name: 'constraint'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'users_constraint'; ofType: null; }; }; defaultValue: null }, { name: 'update_columns'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'LIST'; name: never; ofType: { kind: 'NON_NULL'; name: never; ofType: { kind: 'ENUM'; name: 'users_update_column'; ofType: null; }; }; }; }; defaultValue: "[]" }, { name: 'where'; type: { kind: 'INPUT_OBJECT'; name: 'users_bool_exp'; ofType: null; }; defaultValue: null }]; };
    'users_order_by': { kind: 'INPUT_OBJECT'; name: 'users_order_by'; isOneOf: false; inputFields: [{ name: 'espusermacs_aggregate'; type: { kind: 'INPUT_OBJECT'; name: 'espusermac_aggregate_order_by'; ofType: null; }; defaultValue: null }, { name: 'password'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }, { name: 'username'; type: { kind: 'ENUM'; name: 'order_by'; ofType: null; }; defaultValue: null }]; };
    'users_pk_columns_input': { kind: 'INPUT_OBJECT'; name: 'users_pk_columns_input'; isOneOf: false; inputFields: [{ name: 'username'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'SCALAR'; name: 'String'; ofType: null; }; }; defaultValue: null }]; };
    'users_select_column': { name: 'users_select_column'; enumValues: 'password' | 'username'; };
    'users_set_input': { kind: 'INPUT_OBJECT'; name: 'users_set_input'; isOneOf: false; inputFields: [{ name: 'password'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'username'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'users_stream_cursor_input': { kind: 'INPUT_OBJECT'; name: 'users_stream_cursor_input'; isOneOf: false; inputFields: [{ name: 'initial_value'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'users_stream_cursor_value_input'; ofType: null; }; }; defaultValue: null }, { name: 'ordering'; type: { kind: 'ENUM'; name: 'cursor_ordering'; ofType: null; }; defaultValue: null }]; };
    'users_stream_cursor_value_input': { kind: 'INPUT_OBJECT'; name: 'users_stream_cursor_value_input'; isOneOf: false; inputFields: [{ name: 'password'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }, { name: 'username'; type: { kind: 'SCALAR'; name: 'String'; ofType: null; }; defaultValue: null }]; };
    'users_update_column': { name: 'users_update_column'; enumValues: 'password' | 'username'; };
    'users_updates': { kind: 'INPUT_OBJECT'; name: 'users_updates'; isOneOf: false; inputFields: [{ name: '_set'; type: { kind: 'INPUT_OBJECT'; name: 'users_set_input'; ofType: null; }; defaultValue: null }, { name: 'where'; type: { kind: 'NON_NULL'; name: never; ofType: { kind: 'INPUT_OBJECT'; name: 'users_bool_exp'; ofType: null; }; }; defaultValue: null }]; };
};

/** An IntrospectionQuery representation of your schema.
 *
 * @remarks
 * This is an introspection of your schema saved as a file by GraphQLSP.
 * It will automatically be used by `gql.tada` to infer the types of your GraphQL documents.
 * If you need to reuse this data or update your `scalars`, update `tadaOutputLocation` to
 * instead save to a .ts instead of a .d.ts file.
 */
export type introspection = {
  name: 'server';
  query: 'query_root';
  mutation: 'mutation_root';
  subscription: 'subscription_root';
  types: introspection_types;
};

import * as gqlTada from 'gql.tada';
